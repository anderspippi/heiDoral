fun find_reachable_blocks(graph: Graph) -> BitSet {
    let worklist = Vec[Block]();
    let blocks = graph.numberBlocks();
    let visited = BitSet(blocks.toInt64());
    let successors_processed = arrayFill[Int64](blocks.toInt(), 0L);

    worklist.push(graph.entryBlock);

    while !worklist.isEmpty() {
        let block = worklist.last().unwrap();

        if successors_processed(block.id.toInt()) == block.successors.length() {
            worklist.pop();
        } else {
            let idx = successors_processed(block.id.toInt());
            let successor = block.successors.get(block.id.toInt64());
            successors_processed(block.id.toInt()) = idx + 1L;

            if !visited.contains(successor.id.toInt64()) {
                worklist.push(successor);
            }
        }
    }

    visited
}