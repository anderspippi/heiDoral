//= cannon

fun main() {
    let vec = Vec[Int32]();
    assert(vec.length() == 0L);
    assert(vec.capacity() == 0L);

    vec.push(1);
    vec.push(2);
    vec.push(3);
    assert(vec.length() == 3L);
    assert(vec.capacity() == 4L);

    vec.push(4);
    assert(vec.length() == 4L);
    assert(vec.capacity() == 4L);

    vec.push(5);
    assert(vec.length() == 5L);
    assert(vec.capacity() == 8L);
    assert(vec(0L) == 1);
    assert(vec(1L) == 2);
    assert(vec(2L) == 3);
    assert(vec(3L) == 4);
    assert(vec(4L) == 5);

    vec(0L) = vec(0L) + 2;
    vec(1L) = vec(0L) - 1;

    assert(vec(0L) == 3);
    assert(vec(1L) == 2);

    vec.trimToLen();
    assert(vec.length() == 5L);
    assert(vec.capacity() == 5L);

    assert(vec(0L) == 3);
    assert(vec(1L) == 2);
    assert(vec(2L) == 3);
    assert(vec(3L) == 4);
    assert(vec(4L) == 5);
}
