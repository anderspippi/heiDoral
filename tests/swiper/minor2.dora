//= vm-args "--gc-parallel-minor --gc-worker=2 --gc-verify"

fun main() {
    var x = Foo(NewOption[Foo]::None);
    var i = 0;

    while i < 100 {
        x = Foo(NewOption[Foo]::Some(x));
        Foo(NewOption[Foo]::Some(x));
        i = i + 1;
    }

    forceMinorCollect();
    assert(x.next.unwrap().next.isSome());

    i = 0;

    while i < 100 {
        x = Foo(NewOption[Foo]::Some(x));
        Foo(NewOption[Foo]::Some(x));
        i = i + 1;
    }

    forceMinorCollect();
    assert(x.next.unwrap().next.isSome());
    forceMinorCollect();
    assert(x.next.unwrap().next.isSome());
}

class Foo(let next: NewOption[Foo])