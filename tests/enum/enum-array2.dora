//= vm-args "--gc-verify"

enum Foo { A(Int32, String, Float32), B }

fun main() {
    let object = createArray();
    assert(std::unsafeLoadEnumVariant[Foo](object(0L)) == 1);
    std::forceCollect();
    assert(std::unsafeLoadEnumVariant[Foo](object(0L)) == 1);
    updateArray(object);
    std::forceMinorCollect();
    assert(std::unsafeLoadEnumVariant[Foo](object(0L)) == 0);
    assert(std::unsafeLoadEnumElement[Foo, Int32](object(0L), 0, 0) == 112);
    assert(std::unsafeLoadEnumElement[Foo, String](object(0L), 0, 1) == "abc");
    assert(std::unsafeLoadEnumElement[Foo, Float32](object(0L), 0, 2) == 17.5F);
}

fun createArray(): Array[Foo] {
    Array[Foo](Foo::B)
}

fun updateArray(object: Array[Foo]) {
    object(0L) = Foo::A(112, "abc", 17.5F);
}
