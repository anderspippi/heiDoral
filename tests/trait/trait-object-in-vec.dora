trait Foo { fn test(); }

class Baz
impl Foo for Baz {
    fn test() {}
}

fn foo(): Foo {
    Baz() as Foo
}

fn main() {
    let f = foo();
    let g = foo();
    let h = foo();

    let data = Vec[Foo]();
    data.push(f);
    data.push(g);
    data.push(h);
    assert(data(2) === h);
    assert(data.pop() === h);
    assert(data.pop() === g);
    assert(data.pop() === f);
    assert(data.size() == 0);
}
