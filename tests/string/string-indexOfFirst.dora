fn main() {
  testBothEmpty();
  testNeedleEmpty();
  testHaystackEmpty();
  testNeedleLarger();
  testSuccess();
  testMultipleMatch();
  testFailure();
}

fn testBothEmpty() {
  assert("".indexOfFirst("").has(0L));
}

fn testNeedleEmpty() {
  assert("abc".indexOfFirst("").has(0L));
}

fn testHaystackEmpty() {
  assert("".indexOfFirst("abc").isNone());
}

fn testNeedleLarger() {
  assert("abc".indexOfFirst("abcdef").isNone());
}

fn testSuccess() {
  assert("abcdef".indexOfFirst("abc").has(0L));
  assert("defabc".indexOfFirst("abc").has(3L));
  assert("ababbaadef".indexOfFirst("aa").has(5L));
  assert("apapplapple".indexOfFirst("apple").has(6L));
}

fn testMultipleMatch() {
  assert("abcdefabc".indexOfFirst("abc").has(0L));
}

fn testFailure() {
  assert("def".indexOfFirst("abc").isNone());
}
