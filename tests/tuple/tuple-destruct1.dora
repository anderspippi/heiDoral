fn main() {
    assert(myadd1((1I, 4I)) == 5I);
    assert(myadd1((3I, 1I)) == 4I);

    assert(myadd2((3I, (1I, 9I))) == 13I);
    assert(myadd3((3I, (100I, 9I))) == 12I);
}

fn myadd1(x: (Int32, Int32)): Int32 {
    let (a, b) = x;

    a + b
}

fn myadd2(x: (Int32, (Int32, Int32))): Int32 {
    let (a, (b, c)) = x;

    a + b + c
}

fn myadd3(x: (Int32, (Int32, Int32))): Int32 {
    let (a, (_, b)) = x;

    a + b
}