//= vm-args "--gc-young-size=64M --max-heap-size=128M"
//= config region

class MyThread(): std::Thread {
    @override fn run() {
        allocator();
        println("done");
    }
}

fn main() {
    var i = 0I;

    while i < 4I {
        let thread = MyThread();
        thread.start();
        i = i + 1I;
    }

    allocator();
    println("done");
}

fn allocator() {
    var i = 1I;
    var list = Foo(0I, None[Foo]);

    while i < 10_000I {
        list = Foo(i, Some[Foo](list));
        i = i + 1I;
    }

    i = 10_000I;

    while i > 1I {
        i = i - 1I;
        assert(list.key == i);
        list = list.prev.getOrPanic();
    }

    assert(list.prev.isNone());
}

class Foo(let key: Int32, let prev: Option[Foo])