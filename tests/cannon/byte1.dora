fn main() {    
    assert(!eq(20u8, 5u8));
    assert(eq(5u8, 5u8));
    assert(!eq(5u8, 20u8));

    assert(ne(20u8, 5u8));
    assert(!ne(5u8, 5u8));
    assert(ne(5u8, 20u8));


    assert(!lt(20u8, 5u8));
    assert(!lt(5u8, 5u8));
    assert(lt(5u8, 20u8));

    assert(!le(20u8, 5u8));
    assert(le(5u8, 5u8));
    assert(le(5u8, 20u8));

    assert(ge(20u8, 5u8));
    assert(ge(5u8, 5u8));
    assert(!ge(5u8, 20u8));

    assert(gt(20u8, 5u8));
    assert(!gt(5u8, 5u8));
    assert(!gt(5u8, 20u8));
}

fn eq(x: UInt8, y: UInt8): Bool {
    return x == y;
}

fn ne(x: UInt8, y: UInt8): Bool {
    return x != y;
}

fn lt(x: UInt8, y: UInt8): Bool {
    return x < y;
}

fn le(x: UInt8, y: UInt8): Bool {
    return x <= y;
}

fn ge(x: UInt8, y: UInt8): Bool {
    return x >= y;
}

fn gt(x: UInt8, y: UInt8): Bool {
    return x > y;
}