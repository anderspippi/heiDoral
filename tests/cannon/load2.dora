let mut glob_bool: Bool = false;
let mut glob_char: Char = 'x';
let mut glob_byte: UInt8 = 0u8;
let mut glob_int: Int32 = 0i32;
let mut glob_long: Int64 = 0i64;
let mut glob_float: Float32 = 0.0f32;
let mut glob_double: Float64 = 0.0;
let mut glob_string: String = "";
let mut glob_obj: Foo = Foo();

fn main() {
    init_globs();
    
    assert(loadGlobalBool() == true);
    assert(loadGlobalChar() == '5');
    assert(loadGlobalByte() == 5u8);
    assert(loadGlobalInt32() == 5i32);
    assert(loadGlobalInt64() == 5i64);
    assert(loadGlobalFloat32() == 5f32);
    assert(loadGlobalFloat64() == 5f64);
    assert(loadGlobalString() == "5");

    assert(loadGlobalPtr() === glob_obj);
}

fn init_globs() {
    glob_bool = true;
    glob_char = '5';
    glob_byte = 5u8;
    glob_int = 5i32;
    glob_long = 5i64;
    glob_float = 5f32;
    glob_double = 5f64;
    glob_string = "5";
    glob_obj = Foo();  
}

fn loadGlobalBool(): Bool { glob_bool }

fn loadGlobalByte(): UInt8 { glob_byte }

fn loadGlobalChar(): Char { glob_char }

fn loadGlobalInt32(): Int32 { glob_int }

fn loadGlobalInt64(): Int64 { glob_long }

fn loadGlobalFloat32(): Float32 { glob_float }

fn loadGlobalFloat64(): Float64 { glob_double }

fn loadGlobalString(): String { glob_string }

fn loadGlobalPtr(): Foo { glob_obj }

class Foo
