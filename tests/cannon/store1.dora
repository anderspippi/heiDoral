fun main() {
    let fooBool = FooBool();
    let fooByte = FooByte();
    let fooChar = FooChar();
    let fooInt32 = FooInt32();
    let fooInt64 = FooInt64();
    let fooFloat = FooFloat();
    let fooDouble = FooDouble();
    let fooString = FooString();
    let fooPtr = FooPtr();

    storeBool(fooBool, true);
    storeByte(fooByte, 1Y);
    storeChar(fooChar, '1');
    storeInt32(fooInt32, 23);
    storeInt64(fooInt64, 1L);
    storeFloat(fooFloat, 1F);
    storeDouble(fooDouble, 1D);
    storeString(fooString, "1");
    storePtr(fooPtr, fooInt32);

    assert(fooBool.y == true);
    assert(fooByte.y == 1Y);
    assert(fooChar.y == '1');
    assert(fooInt32.y == 23);
    assert(fooInt64.y == 1L);
    assert(fooFloat.y == 1F);
    assert(fooDouble.y == 1D);
    assert(fooString.y == "1");
    assert(fooPtr.y === fooInt32);
    assert(fooPtr.y.y == 23)
}

@cannon fun storeBool(x: FooBool, z: Bool) {
    x.y = z;
}
@cannon fun storeByte(x: FooByte, z: UInt8) {
    x.y = z;
}
@cannon fun storeChar(x: FooChar, z: Char) {
    x.y = z;
}
@cannon fun storeInt32(x: FooInt32, z: Int32) {
    x.y = z;
}
@cannon fun storeInt64(x: FooInt64, z: Int64) {
    x.y = z;
}
@cannon fun storeFloat(x: FooFloat, z: Float) {
    x.y = z;
}
@cannon fun storeDouble(x: FooDouble, z: Double) {
    x.y = z;
}
@cannon fun storeString(x: FooString, z: String) {
    x.y = z;
}
@cannon fun storePtr(x: FooPtr, z: FooInt32) {
    x.y = z;
}

class FooBool() {
    var y: Bool;
}
class FooByte() {
    var y: UInt8;
}
class FooChar() {
    var y: Char;
}
class FooInt32() {
    var y: Int32;
}
class FooInt64() {
    var y: Int64;
}
class FooFloat() {
    var y: Float;
}
class FooDouble() {
    var y: Double;
}
class FooString() {
    var y: String;
}
class FooPtr() {
    var y: FooInt32;
}