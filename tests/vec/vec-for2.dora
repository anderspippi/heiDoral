fn main() {
    assert(mysum1(Vec[Int32]()) == 0i32);
    assert(mysum1(Vec[Int32](1i32)) == 1i32);
    assert(mysum1(Vec[Int32](1i32, 2i32, 3i32, 4i32, 5i32)) == 15i32);

    assert(mysum2(Vec[Float32]()) == 0.0F);
    assert(mysum2(Vec[Float32](1.0F)) == 1.0F);
    assert(mysum2(Vec[Float32](1.0F, 2.0F, 3.0F, 4.0F, 5.0F)) == 15.0F);
}

fn mysum1(x: Vec[Int32]): Int32 {
    var entries = 0i32;
    for val in x {
        entries = entries + val;
    }
    entries
}

fn mysum2(x: Vec[Float32]): Float32 {
    var entries = 0.0F;
    for val in x {
        entries = entries + val;
    }
    entries
}
