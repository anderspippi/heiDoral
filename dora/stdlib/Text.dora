@pub class Text(let value: String, let locale: Locale) {

  @pub fn plus(rhs: Text): Text {
    if self.locale != rhs.locale {
      fatalError("locales different");
    }
    return Text(self.value + rhs.value, self.locale);
  }

  @pub fn asString(): String = self.value;

  @pub fn toString(): String = "Text(" + self.value + ", " + self.locale.toString() + ")";

  @pub fn asBytes(): Array[UInt8] {
    unimplemented();
    return Array[UInt8]::empty();
  }

  @pub fn isEmpty(): Bool = self.value.isEmpty();

  @pub fn codePoints(): CodepointIterator = CodepointIterator(self.value, 0i64);

  @pub fn toUpperCase(): Text {
    unimplemented();
    return self;
  }

  @pub fn toLowerCase(): Text {
    unimplemented();
    return self;
  }
}
