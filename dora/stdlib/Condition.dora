@pub class Condition {
    let waiters: AtomicInt32 = AtomicInt32(0I);

    @pub fn wait(mtx: Mutex) {
        self.enqueue();
        mtx.unlock();
        self.block();
        mtx.lock();
    }

    @pub fn notifyOne() {
        if self.waiters.get() == 0I {
            return;
        }

        self.wakeupOne();
    }

    @pub fn notifyAll() {
        if self.waiters.get() == 0I {
            return;
        }

        self.waiters.set(0I);
        self.wakeupAll();
    }

    @internal fn enqueue();
    @internal fn block();

    @internal fn wakeupOne();
    @internal fn wakeupAll();
}
